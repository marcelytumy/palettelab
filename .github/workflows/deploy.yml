name: Deploy to GitHub Pages

on:
  push:
    branches: ["main"]
  # Allow manual trigger of deployment
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4 # Updated from v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v4 # Updated from v3
        with:
          node-version: 18
          cache: 'npm' # Changed from 'npm' to 'pnpm' as per setup-node v4 recommendations for pnpm
      
      - name: Setup PNPM
        uses: pnpm/action-setup@v3 # Updated from v2
        with:
          version: 8
          run_install: false

      - name: Get PNPM store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup PNPM cache
        uses: actions/cache@v4 # Updated from v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Create .nojekyll file
        run: touch out/.nojekyll
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3 # Updated from v1
        with:
          path: ./out

  deploy:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # Updated from v2